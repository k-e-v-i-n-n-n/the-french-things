{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryModal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryModal = _ref => {\n  _s();\n  let {\n    setShowModal\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(AppContext);\n  const [wordCat, setWordCat] = useState();\n  const [expCat, setExpCat] = useState();\n  const [cat, setCat] = useState();\n  const [isActive1, setIsActive1] = useState(false);\n  const [isActive2, setIsActive2] = useState(false);\n  function activate(e) {\n    if (e.target.value != \"\") {\n      setIsActive1(true);\n      setIsActive2(false);\n    } else {\n      setIsActive1(false);\n      setIsActive2(true);\n    }\n  }\n  function activate2(e) {\n    if (e.target.value != \"\") {\n      setIsActive1(false);\n      setIsActive2(true);\n    } else {\n      setIsActive1(true);\n      setIsActive2(false);\n    }\n  }\n  const expMap = user.expressions.map(exp => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: exp.french,\n    disabled: isActive1,\n    children: exp.french\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 50\n  }, this));\n  const wordMap = user.words.map(word => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: word.french,\n    disabled: isActive2,\n    children: word.french\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 46\n  }, this));\n  function makeCat(e) {\n    e.preventDefault();\n    fetch(\"/categories\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        category: [cat]\n      })\n    }).then(r => r.json()).then(r => console.log(\"cat r\", r));\n  }\n  function makeList(e) {\n    e.preventDefault();\n    let key;\n    let value;\n    if (wordCat != \"\") {\n      key = \"word\";\n      value = wordCat;\n    } else if (expCat != \"\") {\n      key = \"expression\";\n      value = expCat;\n    }\n    fetch(\"/lists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        [key]: value,\n        categories_attributes: [cat]\n      })\n    }).then(r => r.json()).then(r => console.log(\"cat r\", r));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cat,\n        className: \"modal-input\",\n        onChange: e => {\n          setCat(e.target.value);\n          activate(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          defaultValue: true,\n          children: \"-Select Category-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), catMap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select one of the following\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-type-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-label\",\n          children: \"Word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: wordCat,\n          className: \"modal-input\",\n          onChange: e => {\n            setWordCat(e.target.value);\n            activate(e);\n            console.log(\"word\", e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            defaultValue: true,\n            children: \"-Select Word-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), wordMap]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-label\",\n          children: \"Expression\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: expCat,\n          className: \"modal-input\",\n          onChange: e => {\n            setExpCat(e.target.value);\n            activate2(e);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            defaultValue: true,\n            children: \"-Select Expresion-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), expMap]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-save\",\n          onClick: e => makeList(e),\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-cancel\",\n          onClick: () => setShowModal(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 1\n  }, this);\n};\n_s(CategoryModal, \"UwOStRJhXpEMey50iRu6kNY2Lhs=\");\n_c = CategoryModal;\nexport default CategoryModal;\nvar _c;\n$RefreshReg$(_c, \"CategoryModal\");","map":{"version":3,"names":["useContext","useState","AppContext","jsxDEV","_jsxDEV","CategoryModal","_ref","_s","setShowModal","user","setUser","wordCat","setWordCat","expCat","setExpCat","cat","setCat","isActive1","setIsActive1","isActive2","setIsActive2","activate","e","target","value","activate2","expMap","expressions","map","exp","french","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","wordMap","words","word","makeCat","preventDefault","fetch","method","headers","body","JSON","stringify","category","then","r","json","console","log","makeList","key","categories_attributes","className","onChange","defaultValue","catMap","id","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryModal.js"],"sourcesContent":["import { useContext, useState } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst CategoryModal = ({setShowModal}) => {\n    const {user, setUser} = useContext(AppContext)\n\n    const [wordCat, setWordCat] = useState()\n    const [expCat, setExpCat] = useState()  \n    const [cat, setCat] = useState()\n    const [isActive1, setIsActive1] = useState(false)\n    const [isActive2, setIsActive2] = useState(false)\n\n    function activate(e){\n    if(e.target.value != \"\")\n    {setIsActive1(true); setIsActive2(false)}\n    else {setIsActive1(false); setIsActive2(true)}}\n\n    function activate2(e){\n        if(e.target.value != \"\")\n        {setIsActive1(false); setIsActive2(true)}\n        else {setIsActive1(true); setIsActive2(false)}}\n\n    const expMap = user.expressions.map((exp) => <option value={exp.french} disabled={isActive1}>{exp.french}</option>)\n    const wordMap = user.words.map((word) => <option value={word.french} disabled={isActive2}>{word.french}</option>)\n\n\n    function makeCat(e){\n        e.preventDefault()\n    \n        fetch(\"/categories\",{\n            method:\"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify({\n            category: [cat]\n        })})\n        .then((r) => r.json()).then((r) => console.log(\"cat r\", r))}\n\n    function makeList(e){\n    e.preventDefault()\n    let key\n    let value\n    if(wordCat != \"\"){key = \"word\"; value = wordCat}\n    else if (expCat != \"\")\n    {key = \"expression\"; value = expCat}\n\n    fetch(\"/lists\",{\n        method:\"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n        [key]: value,\n        categories_attributes: [cat]\n    })})\n    .then((r) => r.json()).then((r) => console.log(\"cat r\", r))}\n   \n\n\n\n    return(\n<div className=\"overlay\">\n        <div className=\"add-category-container\">\n            <label className=\"modal-label\">Category</label>\n            <select value={cat} className=\"modal-input\" onChange={(e) => {setCat(e.target.value); activate(e)}}>\n                    <option value=\"\" defaultValue >-Select Category-</option>\n                    {catMap}\n                    </select>\n            <p>Select one of the following</p>\n            <div className=\"category-type-container\" >\n                 <label className=\"modal-label\">Word</label>\n                <select value={wordCat} className=\"modal-input\" onChange={(e) => {setWordCat(e.target.value); activate(e);  console.log(\"word\", e)}}>\n                    <option value=\"\" defaultValue >-Select Word-</option>\n                    {wordMap}\n                    </select>\n                <label className=\"modal-label\">Expression</label>\n                <select value={expCat} className=\"modal-input\" onChange={(e) => {setExpCat(e.target.value);activate2(e)}}>\n                <option value=\"\" defaultValue >-Select Expresion-</option>\n                    {expMap}\n                </select>\n            </div>\n\n            <div className=\"modal-button-container\">\n                <button id=\"modal-save\" onClick={(e) => makeList(e)}>save</button>\n                <button id=\"modal-cancel\" onClick={() => setShowModal(false)}>cancel</button>\n            </div>\n\n        </div>\n\n</div>\n\n    )\n}\n\nexport default CategoryModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}