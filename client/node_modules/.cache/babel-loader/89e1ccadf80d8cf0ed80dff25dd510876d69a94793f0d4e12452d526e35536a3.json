{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/pages/Expressions.js\";\nimport ExpressionCard from \"../components/ExpressionCard\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expressions = () => {\n  const expressionMap = user.expressions.map(expression => {\n    /*#__PURE__*/_jsxDEV(ExpressionCard, {\n      expression: expression\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 61\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expressions-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expressions-page-container\",\n      children: expressionMap\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Expressions;\nexport default Expressions;\nvar _c;\n$RefreshReg$(_c, \"Expressions\");","map":{"version":3,"names":["ExpressionCard","useContext","AppContext","jsxDEV","_jsxDEV","Expressions","expressionMap","user","expressions","map","expression","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/pages/Expressions.js"],"sourcesContent":["import ExpressionCard from \"../components/ExpressionCard\"\nimport {useContext} from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst Expressions = () => {\n\nconst expressionMap = user.expressions.map((expression) => {<ExpressionCard expression={expression}/> })\n    return(\n\n        <div className=\"expressions-page\">\n            <div className=\"expressions-page-container\">\n                \n                {expressionMap}\n                {/* <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard />\n                <ExpressionCard /> */}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Expressions"],"mappings":";AAAA,OAAOA,cAAc,MAAM,8BAA8B;AACzD,SAAQC,UAAU,QAAO,OAAO;AAChC,SAASC,UAAU,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAE1B,MAAMC,aAAa,GAAGC,IAAI,CAACC,WAAW,CAACC,GAAG,CAAEC,UAAU,IAAK;IAAC,aAAAN,OAAA,CAACJ,cAAc;MAACU,UAAU,EAAEA;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAC,CAAC,CAAC;EACpG,oBAEIV,OAAA;IAAKW,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BZ,OAAA;MAAKW,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAEtCV;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAcZ;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEd,CAAC;AAAAG,EAAA,GAzBKZ,WAAW;AA2BjB,eAAeA,WAAW;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}