{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/ListModal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListModal = _ref => {\n  _s();\n  let {\n    setShowListModal,\n    wordState,\n    expState\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(AppContext);\n  const [wordCat, setWordCat] = useState();\n  const [expCat, setExpCat] = useState();\n  const [cat, setCat] = useState();\n  const [isActive1, setIsActive1] = useState(false);\n  const [isActive2, setIsActive2] = useState(false);\n  const [type, setType] = useState();\n  const [modalObj, setModalObj] = useState();\n  const sketch = {\n    which_id: \"word_id\",\n    type: \"expression\"\n  };\n  function activate(e) {\n    if (e.target.value != \"\") {\n      setIsActive1(true);\n      setIsActive2(false);\n    } else {\n      setIsActive1(false);\n      setIsActive2(true);\n    }\n  }\n  function activate2(e) {\n    if (e.target.value != \"\") {\n      setIsActive1(false);\n      setIsActive2(true);\n    } else {\n      setIsActive1(true);\n      setIsActive2(false);\n    }\n  }\n  const expMap = user.expressions.map(exp => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: exp.french,\n    disabled: isActive1,\n    children: exp.french\n  }, exp.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 50\n  }, this));\n  const wordMap = user.words.map(word => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: word.french,\n    disabled: isActive2,\n    children: word.french\n  }, word.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 46\n  }, this));\n  const catMap = user.categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: c.id,\n    children: c.category\n  }, c.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 47\n  }, this));\n  let key;\n  let value;\n  if (wordState != \"\") {\n    key = \"word_id\";\n    value = wordCat;\n  } else if (expState != \"\") {\n    key = \"expression_id\";\n    value = expCat;\n  }\n  if (key == \"word_id\") {\n    setType(\"Word\");\n  } else if (key == \"expression_id\") {\n    setType(\"Expression\");\n  }\n  const modObj = {\n    [key]: value\n  };\n  console.log(\"key value\", modObj);\n  function makeList(e) {\n    e.preventDefault();\n    fetch(\"/lists\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        [key]: value,\n        category_id: cat\n      })\n    }).then(r => r.json()).then(r => console.log(\"lists\", r));\n  }\n\n  // function addStar(){\n  //     fetch(\"/lists\", {\n\n  //       method:\"POST\",\n  //       headers: {\"Content-Type\": \"application/json\"},\n  //       body:JSON.stringify({\n  //         word_id: word.id,\n  //         category_id: cat.id\n\n  //       })\n  //     })\n\n  //   }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: cat,\n        className: \"modal-input\",\n        onChange: e => {\n          setCat(e.target.value);\n          activate(e);\n          console.log(\"e\", e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          defaultValue: true,\n          children: \"-Select Category-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this), catMap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-label\",\n        children: \"Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: wordCat,\n        className: \"modal-input\",\n        onChange: e => {\n          setWordCat(e.target.value);\n          activate(e);\n          console.log(\"word\", e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          defaultValue: true,\n          children: \"-Select Word-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), wordMap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-save\",\n          onClick: e => {\n            makeList(e);\n            setShowListModal(false);\n          },\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-cancel\",\n          onClick: () => setShowListModal(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 1\n  }, this);\n};\n_s(ListModal, \"EXaly8lbr94omhylErq1Xmj9f1Y=\");\n_c = ListModal;\nexport default ListModal;\nvar _c;\n$RefreshReg$(_c, \"ListModal\");","map":{"version":3,"names":["useContext","useState","AppContext","jsxDEV","_jsxDEV","ListModal","_ref","_s","setShowListModal","wordState","expState","user","setUser","wordCat","setWordCat","expCat","setExpCat","cat","setCat","isActive1","setIsActive1","isActive2","setIsActive2","type","setType","modalObj","setModalObj","sketch","which_id","activate","e","target","value","activate2","expMap","expressions","map","exp","french","disabled","children","id","fileName","_jsxFileName","lineNumber","columnNumber","wordMap","words","word","catMap","categories","c","category","key","modObj","console","log","makeList","preventDefault","fetch","method","headers","body","JSON","stringify","category_id","then","r","json","className","onChange","defaultValue","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/ListModal.js"],"sourcesContent":["import { useContext, useState } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst ListModal = ({setShowListModal, wordState, expState}) => {\n    const {user, setUser} = useContext(AppContext)\n\n    const [wordCat, setWordCat] = useState()\n    const [expCat, setExpCat] = useState()  \n    const [cat, setCat] = useState()\n    const [isActive1, setIsActive1] = useState(false)\n    const [isActive2, setIsActive2] = useState(false)\n    const [type, setType] = useState()\n    const [modalObj, setModalObj] = useState()\n\n    const sketch = {which_id: \"word_id\", type: \"expression\"}\n\n    function activate(e){\n    if(e.target.value != \"\")\n    {setIsActive1(true); setIsActive2(false)}\n    else {setIsActive1(false); setIsActive2(true)}}\n\n    function activate2(e){\n        if(e.target.value != \"\")\n        {setIsActive1(false); setIsActive2(true)}\n        else {setIsActive1(true); setIsActive2(false)}}\n\n    const expMap = user.expressions.map((exp) => <option key={exp.id} value={exp.french} disabled={isActive1}>{exp.french}</option>)\n    const wordMap = user.words.map((word) => <option key={word.id} value={word.french} disabled={isActive2}>{word.french}</option>)\n    const catMap = user.categories.map((c) => <option key={c.id} value={c.id}>{c.category}</option>)\n\n    let key\n    let value\n    if(wordState != \"\"){key = \"word_id\"; value = wordCat}\n    else if (expState != \"\")\n    {key = \"expression_id\"; value = expCat}\n\n    if (key == \"word_id\"){setType(\"Word\")}\n    else if (key == \"expression_id\"){setType(\"Expression\")}\n\n    const modObj = {[key]: value}\n    console.log(\"key value\", modObj)\n   \n    function makeList(e){\n    e.preventDefault()\n\n\n    fetch(\"/lists\",{\n        method:\"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify({\n        [key]: value,\n        category_id: cat\n    })})\n    .then((r) => r.json()).then((r) => console.log(\"lists\", r))}\n   \n    // function addStar(){\n    //     fetch(\"/lists\", {\n    \n    //       method:\"POST\",\n    //       headers: {\"Content-Type\": \"application/json\"},\n    //       body:JSON.stringify({\n    //         word_id: word.id,\n    //         category_id: cat.id\n    \n    //       })\n    //     })\n    \n    //   }\n\n\n    return(\n<div className=\"overlay\">\n        <div className=\"add-category-container\">\n            <label className=\"modal-label\">Category</label>\n            <select value={cat} className=\"modal-input\" onChange={(e) => {setCat(e.target.value); activate(e); console.log(\"e\", e.target.value)}}>\n                <option value=\"\" defaultValue >-Select Category-</option>\n                {catMap}\n            </select>\n\n         \n                <label className=\"modal-label\">Word</label>\n                <select value={wordCat} className=\"modal-input\" onChange={(e) => {setWordCat(e.target.value); activate(e);  console.log(\"word\", e)}}>\n                    <option value=\"\" defaultValue >-Select Word-</option>\n                    {wordMap}\n                    </select>\n                {/* <label className=\"modal-label\">Expression</label>\n                <select value={expCat} className=\"modal-input\" onChange={(e) => {setExpCat(e.target.value);activate2(e)}}>\n                <option value=\"\" defaultValue >-Select Expresion-</option>\n                    {expMap}\n                </select> */}\n        \n\n            <div className=\"modal-button-container\">\n                <button id=\"modal-save\" onClick={(e) => {makeList(e); setShowListModal(false)}}>save</button>\n                <button id=\"modal-cancel\" onClick={() => setShowListModal(false)}>cancel</button>\n            </div>\n\n        </div>\n\n</div>\n\n    )\n}\n\nexport default ListModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}