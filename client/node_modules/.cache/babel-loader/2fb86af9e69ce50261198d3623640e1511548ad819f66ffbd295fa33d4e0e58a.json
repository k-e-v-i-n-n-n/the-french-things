{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/final-project-5/client/src/components/TextBoxes.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TextBoxes(_ref) {\n  _s();\n  let {\n    translateText,\n    setSaveMode,\n    setLoading\n  } = _ref;\n  const {\n    sourceLang,\n    setSourceLang,\n    targetLang,\n    setTargetLang,\n    translationObject,\n    setTranslationObject\n  } = useContext(AppContext);\n  const initialState = {\n    en: \"\",\n    fr: \"\",\n    type: \"\"\n  };\n  const style2 = \"text-box textarea-loading\";\n  const style1 = \"text-box\";\n  function switchLang() {\n    setSourceLang(targetLang);\n    setTargetLang(sourceLang);\n  }\n  function popText(e) {\n    setTranslationObject({\n      ...translationObject,\n      [sourceLang]: e.target.value,\n      [targetLang]: \"\"\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-box\",\n        onChange: popText,\n        value: translationObject[sourceLang],\n        placeholder: sourceLang == \"en\" ? \"Enter a word or phrase in English...\" : \"Saisir un mot ou une expression en français...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-box-center\",\n        onClick: switchLang,\n        children: \"\\u2B82\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"text-box\",\n        value: translationObject[targetLang],\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"translate-button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-box-buttons\",\n        onClick: () => {\n          translateText();\n          setLoading(true);\n        },\n        children: \"translate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-box-buttons\",\n        onClick: () => setSaveMode(true),\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"text-box-buttons\",\n        onClick: () => setTranslationObject(initialState),\n        children: \"clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(TextBoxes, \"FON10x9cGqLybWU1kDjs3WBm1ZM=\");\n_c = TextBoxes;\nexport default TextBoxes;\nvar _c;\n$RefreshReg$(_c, \"TextBoxes\");","map":{"version":3,"names":["useContext","useState","AppContext","jsxDEV","_jsxDEV","Fragment","_Fragment","TextBoxes","_ref","_s","translateText","setSaveMode","setLoading","sourceLang","setSourceLang","targetLang","setTargetLang","translationObject","setTranslationObject","initialState","en","fr","type","style2","style1","switchLang","popText","e","target","value","children","className","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/final-project-5/client/src/components/TextBoxes.js"],"sourcesContent":["import {useContext, useState} from \"react\"\nimport {AppContext} from \"../Context\";\n\nfunction TextBoxes({translateText, setSaveMode, setLoading}) {\n  \n  const {sourceLang, setSourceLang, targetLang, setTargetLang, translationObject, setTranslationObject} = useContext(AppContext)\n\n  const initialState = {en: \"\", fr: \"\", type: \"\"}\n\n  const style2 = \"text-box textarea-loading\"\n  const style1 = \"text-box\"\n\n  function switchLang(){\n    setSourceLang(targetLang)\n    setTargetLang(sourceLang)}\n\n  function popText(e){\n    setTranslationObject({...translationObject, [sourceLang]: e.target.value, [targetLang]: \"\"})}\n\n  return (\n    <>\n      <div className=\"text-box-container\">\n        <textarea className=\"text-box\" onChange={popText} value={translationObject[sourceLang]} placeholder={sourceLang == \"en\" ? \"Enter a word or phrase in English...\" : \"Saisir un mot ou une expression en français...\"}/>\n          <button className=\"text-box-center\" onClick={switchLang} >⮂</button>\n        <textarea className=\"text-box\" value={translationObject[targetLang]} disabled />\n      </div>\n\n      <div className=\"translate-button-container\">\n        <button className=\"text-box-buttons\" onClick={()=>{translateText(); setLoading(true)}}>translate</button>\n        <button className=\"text-box-buttons\" onClick={() => setSaveMode(true) }>save</button>\n        <button className=\"text-box-buttons\" onClick={() => setTranslationObject(initialState)} >clear</button>\n      </div>\n  </>\n\n  );\n}\n\nexport default TextBoxes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}