{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarModal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useState, useEffect } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordStarModal = _ref => {\n  _s();\n  let {\n    setShowListModal,\n    wordState\n  } = _ref;\n  const {\n    user,\n    setUser\n  } = useContext(AppContext);\n  const [modalObj, setModalObj] = useState({\n    category_id: \"\",\n    word_id: wordState\n  });\n  // const [key1, setKey1] = useState()\n  // const [key2, setKey2] = useState()\n  // const [value1, setValue1] = useState()\n  // const [label1, setLabel1] = useState()\n  // const [text1, setText1] = useState()\n\n  function updateCat(e) {\n    setModalObj({\n      ...modalObj,\n      category_id: e.target.value\n    });\n  }\n  const catMap = user.categories.map(c => /*#__PURE__*/_jsxDEV(\"option\", {\n    value: c.id,\n    children: c.category\n  }, c.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 47\n  }, this));\n\n  // useEffect(() => {\n  //     if (wordState != undefined){\n  //         setKey1(\"word_id\");\n  //         setKey2(\"expression_id\")\n  //         setValue1(wordState.id)\n  //         setLabel1(\"Word\")\n  //         setText1(wordState.french)}\n  //         else if (expState != undefined){\n  //             setKey1(\"expression_id\")\n  //             setValue1(expState.id)\n  //             setKey2(\"word_id\")\n  //             setLabel1(\"Expression\")\n  //             setText1(expState.french)}\n\n  // }, [expState, wordState])\n\n  function makeList(e) {\n    e.preventDefault();\n    if (modalObj[\"category_id\"] === \"\") {\n      alert(\"Please select a category\");\n    } else {\n      fetch(\"/wordstars\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          category_id: modalObj[\"category_id\"],\n          word_id: modalObj[\"word_id\"]\n        })\n      }).then(r => r.json()).then(r => {\n        setShowListModal(false);\n        console.log(\"lists\", r);\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-category-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: modalObj[\"category_id\"],\n        className: \"modal-input\",\n        onChange: e => {\n          updateCat(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          defaultValue: true,\n          children: \"-Select Category-\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), catMap]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"modal-label\",\n        children: \"Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"modal-input\",\n        children: wordState.french\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-save\",\n          onClick: e => {\n            makeList(e);\n          },\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"modal-cancel\",\n          onClick: () => setShowListModal(false),\n          children: \"cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(WordStarModal, \"Gh5FuWcexqqUoYVs/niTzPRmFtE=\");\n_c = WordStarModal;\nexport default WordStarModal;\nvar _c;\n$RefreshReg$(_c, \"WordStarModal\");","map":{"version":3,"names":["useContext","useState","useEffect","AppContext","jsxDEV","_jsxDEV","WordStarModal","_ref","_s","setShowListModal","wordState","user","setUser","modalObj","setModalObj","category_id","word_id","updateCat","e","target","value","catMap","categories","map","c","id","children","category","fileName","_jsxFileName","lineNumber","columnNumber","makeList","preventDefault","alert","fetch","method","headers","body","JSON","stringify","then","r","json","console","log","className","onChange","defaultValue","french","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarModal.js"],"sourcesContent":["import { useContext, useState, useEffect } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst WordStarModal = ({setShowListModal, wordState}) => {\n    const {user, setUser} = useContext(AppContext)\n    const [modalObj, setModalObj] = useState({category_id: \"\", word_id: wordState})\n    // const [key1, setKey1] = useState()\n    // const [key2, setKey2] = useState()\n    // const [value1, setValue1] = useState()\n    // const [label1, setLabel1] = useState()\n    // const [text1, setText1] = useState()\n\n    function updateCat(e){\n        setModalObj({...modalObj, category_id: e.target.value})\n    }\n\n    const catMap = user.categories.map((c) => <option key={c.id} value={c.id}>{c.category}</option>)\n\n// useEffect(() => {\n//     if (wordState != undefined){\n//         setKey1(\"word_id\");\n//         setKey2(\"expression_id\")\n//         setValue1(wordState.id)\n//         setLabel1(\"Word\")\n//         setText1(wordState.french)}\n//         else if (expState != undefined){\n//             setKey1(\"expression_id\")\n//             setValue1(expState.id)\n//             setKey2(\"word_id\")\n//             setLabel1(\"Expression\")\n//             setText1(expState.french)}\n  \n// }, [expState, wordState])\n\n\n    \n\nfunction makeList(e){\n    e.preventDefault()\n    if(modalObj[\"category_id\"] === \"\"){\n        alert(\"Please select a category\")}\n    else {\n\n    fetch(\"/wordstars\",{\n        method:\"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: JSON.stringify(\n            {\n                category_id: modalObj[\"category_id\"], \n                word_id: modalObj[\"word_id\"] \n    \n    })})\n        .then((r) => r.json()).then((r) =>{ setShowListModal(false); console.log(\"lists\", r)})}}\n\n    return(\n    <div className=\"overlay\">\n        <div className=\"add-category-container\">\n            <label className=\"modal-label\">Category</label>\n            <select value={modalObj[\"category_id\"]} className=\"modal-input\" onChange={(e) => {updateCat(e)}}>\n                <option value=\"\" defaultValue >-Select Category-</option>\n                {catMap}\n            </select>\n                <label className=\"modal-label\">Word</label>\n                <p className=\"modal-input\">{wordState.french}</p>\n            <div className=\"modal-button-container\">\n                <button id=\"modal-save\" onClick={(e) => {makeList(e)}}>save</button>\n                <button id=\"modal-cancel\" onClick={() => setShowListModal(false)}>cancel</button>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default WordStarModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}