{"ast":null,"code":"var _jsxFileName = \"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Modal.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Modal = _ref => {\n  _s();\n  let {\n    setSaveMode\n  } = _ref;\n  const {\n    targetLang,\n    sourceLang,\n    translationObject,\n    setTranslationObject\n  } = useContext(AppContext);\n  const [langOne, setLangOne] = useState();\n  const [langTwo, setLangTwo] = useState();\n  useEffect(() => {\n    if (sourceLang === \"en\") {\n      setLangOne(\"French\");\n      setLangTwo(\"English\");\n    } else {\n      setLangOne(\"English\");\n      setLangTwo(\"French\");\n    }\n  }, sourceLang);\n  function save(e) {\n    e.preventDefault();\n    fetch(\"/expressions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        french: translationObject[\"fr\"],\n        english: translationObject[\"en\"],\n        target: targetLang\n      })\n    }).then(r => r.json()).then(r => console.log(\"res\", r));\n  }\n  {\n    {}\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"save-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"save-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-label\",\n          children: langOne\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal-input\",\n          value: translationObject[targetLang]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"modal-label\",\n          children: langTwo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"modal-input\",\n          value: translationObject[sourceLang]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"modal-input\",\n          onChange: e => setTranslationObject({\n            ...translationObject,\n            type: e.target.value\n          }),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            defaultValue: true,\n            selected: true,\n            children: \"-Select Entry Type-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"expression\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"word\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"modal-save\",\n            onClick: e => {\n              save(e);\n              setSaveMode(null);\n            },\n            children: \"save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"modal-cancel\",\n            onClick: () => setSaveMode(null),\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Modal, \"UZ16lEB/3AmSTwfKiHkRWiQOkHg=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["useContext","useEffect","useState","AppContext","jsxDEV","_jsxDEV","Modal","_ref","_s","setSaveMode","targetLang","sourceLang","translationObject","setTranslationObject","langOne","setLangOne","langTwo","setLangTwo","save","e","preventDefault","fetch","method","headers","body","JSON","stringify","french","english","target","then","r","json","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","type","defaultValue","selected","id","onClick","_c","$RefreshReg$"],"sources":["/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Modal.js"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst Modal = ({setSaveMode}) => {\nconst {targetLang, sourceLang, translationObject, setTranslationObject} = useContext(AppContext)\n\nconst [langOne, setLangOne] = useState()\nconst [langTwo, setLangTwo] = useState()\n\nuseEffect(() => {\n    if(sourceLang === \"en\"){setLangOne(\"French\"); setLangTwo(\"English\")}\n    else{setLangOne(\"English\"); setLangTwo(\"French\")}  \n}, sourceLang)\n\nfunction save(e){\n    e.preventDefault()\n    fetch(\"/expressions\", {\n        method:\"POST\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            french: translationObject[\"fr\"],\n            english: translationObject[\"en\"],\n            target: targetLang,\n            })})\n        .then((r) => r.json()).then((r) =>console.log(\"res\", r))}\n\n\n\n\n{{\n    \n}}\n\n    return (\n        <div className=\"overlay\">\n\n            <div className=\"save-modal\">\n         \n                <form className=\"save-form\" >\n                \n                    <label className=\"modal-label\" >{langOne}</label>\n                    <input className=\"modal-input\" value={translationObject[targetLang]} ></input>\n                    <label className=\"modal-label\" >{langTwo}</label>\n                    <input className=\"modal-input\" value={translationObject[sourceLang]} ></input>\n\n                    <label>Type</label>\n                    <select className=\"modal-input\" onChange={(e) => setTranslationObject({...translationObject, type: e.target.value})} >\n                        <option value=\"\" defaultValue selected={true} >-Select Entry Type-</option>\n                        <option>expression</option>\n                        <option>word</option>\n                    </select>\n                    <div className=\"modal-button-container\">\n                        <button id=\"modal-save\" onClick={(e) => {save(e); setSaveMode(null)}} >save</button>\n                        <button id=\"modal-cancel\" onClick={() => setSaveMode(null)}>cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n\n\n    )\n}\n\nexport default Modal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}