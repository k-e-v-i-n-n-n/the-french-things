[{"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/index.js":"1","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/App.js":"2","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/Context.js":"3","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Header2.js":"4","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Stars.js":"5","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Expressions.js":"6","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Translate.js":"7","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Login.js":"8","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Words.js":"9","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Header1.js":"10","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryList.js":"11","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryModal.js":"12","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Category.js":"13","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/ExpressionCard.js":"14","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarCard.js":"15","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordCard.js":"16","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/TextBoxes.js":"17","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Modal.js":"18","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarModal.js":"19"},{"size":426,"mtime":1683146562149,"results":"20","hashOfConfig":"21"},{"size":2579,"mtime":1695297146604,"results":"22","hashOfConfig":"21"},{"size":683,"mtime":1683146562148,"results":"23","hashOfConfig":"21"},{"size":996,"mtime":1695645730265,"results":"24","hashOfConfig":"21"},{"size":1968,"mtime":1695658199602,"results":"25","hashOfConfig":"21"},{"size":849,"mtime":1683146562149,"results":"26","hashOfConfig":"21"},{"size":800,"mtime":1687972355982,"results":"27","hashOfConfig":"21"},{"size":3248,"mtime":1695646305496,"results":"28","hashOfConfig":"21"},{"size":984,"mtime":1695826548871,"results":"29","hashOfConfig":"21"},{"size":1959,"mtime":1695914988174,"results":"30","hashOfConfig":"21"},{"size":363,"mtime":1683146562148,"results":"31","hashOfConfig":"21"},{"size":1660,"mtime":1687972355981,"results":"32","hashOfConfig":"21"},{"size":844,"mtime":1687972355981,"results":"33","hashOfConfig":"21"},{"size":1145,"mtime":1687972355981,"results":"34","hashOfConfig":"21"},{"size":529,"mtime":1695297420151,"results":"35","hashOfConfig":"21"},{"size":2788,"mtime":1687972355982,"results":"36","hashOfConfig":"21"},{"size":1496,"mtime":1687972355982,"results":"37","hashOfConfig":"21"},{"size":3272,"mtime":1687972355981,"results":"38","hashOfConfig":"21"},{"size":2810,"mtime":1687972355982,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1qwa6hq",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"43"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"43"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"43"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"43"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"100","usedDeprecatedRules":"43"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/index.js",[],[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/App.js",["104","105"],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/Context.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Header2.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Stars.js",["106"],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Expressions.js",["107"],[],"import ExpressionCard from \"../components/ExpressionCard\"\nimport {useContext, useState} from \"react\"\nimport { AppContext } from \"../Context\"\n\n\nconst Expressions = ({setShowListModal}) => {\n\nconst {user, isLogged} = useContext(AppContext)\nconst [expState, setExpState] = useState()\n\nconst expressionMap = user?.expressions.map((expression) => (<ExpressionCard setExpState={setExpState} setShowListModal={setShowListModal} key={expression.id} expression={expression}/>))\n    \nreturn(\n\n    <>\n    {isLogged? \n            <div className=\"expressions-page\">\n                <div className=\"expressions-page-container\">\n                    {expressionMap}\n                </div>\n            </div>\n             :\n           <div className=\"landing-page\">\n            <p>Please Login</p> \n            </div>}    \n    </>\n    )\n}\n\nexport default Expressions","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Translate.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Login.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/landing_pages/Words.js",["108"],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Header1.js",["109","110"],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryList.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/CategoryModal.js",[],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Category.js",["111"],[],"import { useContext } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst Category = ({category, setCatSelected}) => {\n\n  const {user, setUser} = useContext(AppContext)\n\nfunction deleteCat(e){\n  e.stopPropagation()\n  fetch(`/api/categories/${category.id}`,{\n    method: \"DELETE\"\n  }).then(() => deleteState())}\n\n  function deleteState(){\n    const catArray = user.categories\n    const catFilter = catArray.filter((c) => c.id != category.id)\n    const updatedUser = {...user, categories: catFilter}\n    setUser(updatedUser)}\n\n    return(\n\n      <div className=\"category-card-container\" onClick={()=>setCatSelected(category)} >\n        <p className=\"category-title\" >{category.category}</p>\n          <button className=\"category-delete-x\" onClick={(e) => {deleteCat(e)}}  >x</button>\n      </div>\n        \n    )\n}\n\nexport default Category","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/ExpressionCard.js",["112"],[],"import { useContext } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst ExpressionCard = ({expression, setShowListModal, setExpState}) => {\n\n  const {user, setUser} = useContext(AppContext)\n\n  function deleteExp(e){\n    e.preventDefault()\n    fetch(`/api/expressions/${expression.id}`, {\n      method: \"DELETE\"}).then(() => updateExp())}\n\n  function updateExp(){\n    const expArr = user.expressions\n    const expFilter = expArr.filter((exp) => exp.id != expression.id)\n    const updatedUser = {...user, expressions: expFilter}\n    setUser(updatedUser)\n  }\n      \n\n\n\n  return (\n    <div className=\"expression-container\" >\n        <p className=\"target-expression-text\">\n          {expression.french}\n        </p>\n        <p className=\"source-expression-text\">\n          {expression.english}\n        </p>\n        <div className=\"hidden-buttons-container\">\n            {/* <button className=\"card-delete-x\" onClick={() => {setExpState(expression); setShowListModal(true)}} >★</button> */}\n          <button className=\"card-delete-x\" onClick={(e) => deleteExp(e)}>x</button>\n        </div>\n    </div>\n  )\n}\n\nexport default ExpressionCard\n","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarCard.js",["113","114"],[],"/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordCard.js",["115","116"],[],"import { useContext, useState } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst WordCard = ({word, setShowListModal, wordState, setWordState}) => {\n\n  const {user, setUser} = useContext(AppContext)\n  \n\n  const [editMode, setEditMode] = useState(false)\n  const [wordEdit, setWordEdit] = useState(word)\n\n  function editWord(e){\n    e.preventDefault()\n    fetch(`/api/words/${word.id}`, {\n\n      method:\"PATCH\",\n      headers:{\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({french: wordEdit.french, english: wordEdit.english})\n    }).then((r) => r.json()).then((r) => {updateWordState(r); setEditMode(false)})\n  }\n\n  function setWord(e){\n    setWordEdit({...wordEdit, [e.target.name]: e.target.value})\n  }\n\n  function deleteWord(e){\n    e.preventDefault()\n    fetch(`/api/words/${word.id}`, {method: \"DELETE\"})\n    .then(() => deleteWordState())}\n\n  function updateWordState(r){\n    const wordArr = user.words\n    const wordFilter = wordArr.filter((w) => w.id != word.id)\n    wordFilter.push(r)\n    setUser({...user, words: wordFilter})\n  }\n\n  function deleteWordState(){\n    const wordArr = user.words\n    const wordFilter = wordArr.filter((w) => w.id != word.id)\n    const updatedUser = {...user, words: wordFilter}\n    setUser(updatedUser)}\n\n    return (\n\n      <>\n      {editMode ?\n      \n      <div className=\"word-edit-container\" >\n          <div className=\"word-edit-form-container\" >\n              <div className=\"word-edit-input\" >\n                <label className=\"edit-word-text\">French</label>\n                <input name=\"french\" defaultValue={wordEdit.french} onChange={(e) => setWord(e)}/>\n                <button id=\"modal-save\" onClick={(e) => editWord(e)} >save</button>\n              </div>\n              <div className=\"word-edit-input\" >\n                <label name=\"english\" className=\"edit-word-text\" onChange={(e) => setWord(e)}>English</label>\n                <input defaultValue={wordEdit.english}/>\n                <button id=\"modal-cancel\" onClick={() => setEditMode(false)}>cancel</button>\n              </div>\n          </div>\n      </div> \n                  :\n    \n      <div className=\"expression-container\" >\n          <p className=\"target-expression-text\">\n            {word.french}\n          </p>\n          <p className=\"source-expression-text\">\n          {word.english}\n          </p>\n          <div className=\"hidden-buttons-container\">\n            <button className=\"card-delete-x\" onClick={() => {setShowListModal(true); setWordState(word)}} >★</button>\n            <button className=\"card-delete-x\" onClick={() => setEditMode(true)}>✎</button>\n            <button className=\"card-delete-x\" onClick={(e) => deleteWord(e)}>x</button>\n          </div>\n      </div>\n    }\n      </>\n    )\n  } \n  \n  export default WordCard","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/TextBoxes.js",["117","118"],[],"import {useContext, useState} from \"react\"\nimport {AppContext} from \"../Context\";\n\nfunction TextBoxes({translateText, setSaveMode, loading, setLoading}) {\n  \n  const {sourceLang, setSourceLang, targetLang, setTargetLang, translationObject, setTranslationObject} = useContext(AppContext)\n\n  const initialState = {en: \"\", fr: \"\", type: \"\"}\n\n  function switchLang(){\n    setSourceLang(targetLang)\n    setTargetLang(sourceLang)}\n\n  function popText(e){\n    setTranslationObject({...translationObject, [sourceLang]: e.target.value, [targetLang]: \"\"})}\n\n  return (\n    <>\n      <div className=\"text-box-container\">\n        <textarea className=\"text-box\" onChange={popText} value={translationObject[sourceLang]} placeholder={sourceLang == \"en\" ? \"Enter a word or phrase in English...\" : \"Saisir un mot ou une expression en français...\"}/>\n          <button className=\"text-box-center\" onClick={switchLang} >⮂</button>\n        <textarea className={loading ? \"textarea-loading\" : \"text-box\"} value={translationObject[targetLang]} disabled />\n      </div>\n\n      <div className=\"translate-button-container\">\n        <button className=\"text-box-buttons\" onClick={()=>{translateText(); setLoading(true)}}>translate</button>\n        <button className=\"text-box-buttons\" onClick={() => setSaveMode(true) }>save</button>\n        <button className=\"text-box-buttons\" onClick={() => {setTranslationObject(initialState); setLoading(false)}} >clear</button>\n      </div>\n  </>\n\n  );\n}\n\nexport default TextBoxes;\n","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/Modal.js",["119"],[],"import { useContext, useEffect, useState } from \"react\"\nimport { AppContext } from \"../Context\"\n\nconst Modal = ({setSaveMode}) => {\nconst {targetLang, sourceLang, translationObject, setTranslationObject} = useContext(AppContext)\nconst {user, setUser} = useContext(AppContext)\n\nconst [langOne, setLangOne] = useState()\nconst [langTwo, setLangTwo] = useState()\nconst [postPath, setPostPath] =useState()\nconst [alert, setAlert] = useState(false)\n\nuseEffect(() => {\n    if(sourceLang === \"en\"){setLangOne(\"French\"); setLangTwo(\"English\")}\n    else{setLangOne(\"English\"); setLangTwo(\"French\")}  \n}, [sourceLang])\n\nfunction save(e){\ne.preventDefault()\nlet path\nif (translationObject[\"type\"] === \"\" || translationObject[\"fr\"] === \"\" || translationObject[\"en\"] === \"\")\n{setAlert(true)}\nelse{\n    if(postPath === \"Expression\")\n    {path = \"expressions\"}\n    else {path = \"words\"}\n\n    fetch(`/api/${path}`, {\n        method:\"POST\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            french: translationObject[\"fr\"],\n            english: translationObject[\"en\"],\n            target: targetLang,\n            })})\n        .then((r) => r.json()).then((r) =>{setSaveMode(null);updateState(r, path);clearState()})}}\n   \n\nfunction updateState(r, path) {\n    const userArr = user[path]\n    userArr.push(r)\n    const updatedUser = {...user, [path]: userArr}\n    setUser(updatedUser)}\n\nfunction popObject(e){\n    setTranslationObject({...translationObject, [e.target.name]: e.target.value})}\n\nfunction clearState(){\n    const updatedOb = {...translationObject, [sourceLang]: \"\", [targetLang]:\"\", [\"type\"]:\"\"}\n    setTranslationObject(updatedOb); setPostPath()}\n\n    function cancelState(){\n        setPostPath()\n        clearState()\n        setSaveMode(null)}\n\n    return (\n        <div className=\"overlay\">\n            <div className=\"save-modal\">\n                <form className=\"save-form\" >\n                    <label className=\"modal-label\" >{langOne}</label>\n                    <input name={targetLang} className=\"modal-input\" value={translationObject[targetLang]} onChange={(e) => popObject(e)} ></input>\n                    <label  className=\"modal-label\" >{langTwo}</label>\n                    <input name={sourceLang} className=\"modal-input\" value={translationObject[sourceLang]} onChange={(e) => popObject(e)} ></input>\n                    <label className=\"modal-label\">Type</label>\n                    <select value={translationObject[\"type\"]} className=\"modal-input\" onChange={(e) => {setTranslationObject({...translationObject, type: e.target.value}); setPostPath(e.target.value)}} >\n                        <option value=\"\" defaultValue>-Select Entry Type-</option>\n                        <option >Expression</option>\n                        <option>Word</option>\n                    </select>\n                    {alert && <p id=\"error-modal\">Please fill in all fields</p>}\n                    <div className=\"modal-button-container\">\n                        <button id=\"modal-save\" onClick={(e) => {save(e)}}>save</button>\n                        <button id=\"modal-cancel\" onClick={cancelState}>cancel</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default Modal","/Users/kevinlocke/Dropbox/Development/code/encodeur/Phase-5-Project-and-Notes/phase-5-repo/client/src/components/WordStarModal.js",[],[],{"ruleId":"120","severity":1,"message":"121","line":41,"column":6,"nodeType":"122","endLine":41,"endColumn":8,"suggestions":"123"},{"ruleId":"120","severity":1,"message":"124","line":47,"column":5,"nodeType":"122","endLine":47,"endColumn":11,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":1,"column":31,"nodeType":"128","messageId":"129","endLine":1,"endColumn":40},{"ruleId":"126","severity":1,"message":"130","line":9,"column":8,"nodeType":"128","messageId":"129","endLine":9,"endColumn":16},{"ruleId":"126","severity":1,"message":"131","line":2,"column":22,"nodeType":"128","messageId":"129","endLine":2,"endColumn":30},{"ruleId":"132","severity":1,"message":"133","line":32,"column":19,"nodeType":"134","endLine":32,"endColumn":57},{"ruleId":"132","severity":1,"message":"133","line":53,"column":17,"nodeType":"134","endLine":53,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":16,"column":51,"nodeType":"137","messageId":"138","endLine":16,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":15,"column":53,"nodeType":"137","messageId":"138","endLine":15,"endColumn":55},{"ruleId":"126","severity":1,"message":"139","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"140","line":6,"column":16,"nodeType":"128","messageId":"129","endLine":6,"endColumn":23},{"ruleId":"135","severity":1,"message":"136","line":33,"column":51,"nodeType":"137","messageId":"138","endLine":33,"endColumn":53},{"ruleId":"135","severity":1,"message":"136","line":40,"column":51,"nodeType":"137","messageId":"138","endLine":40,"endColumn":53},{"ruleId":"126","severity":1,"message":"131","line":1,"column":21,"nodeType":"128","messageId":"129","endLine":1,"endColumn":29},{"ruleId":"135","severity":1,"message":"141","line":20,"column":121,"nodeType":"137","messageId":"138","endLine":20,"endColumn":123},{"ruleId":"142","severity":1,"message":"143","line":49,"column":81,"nodeType":"144","messageId":"145","endLine":49,"endColumn":92,"fix":"146"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setIsLogged' and 'setUser'. Either include them or remove the dependency array.","ArrayExpression",["147"],"React Hook useEffect has a missing dependency: 'setIsLogged'. Either include it or remove the dependency array.",["148"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'expState' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","Expected '===' and instead saw '=='.","no-useless-computed-key","Unnecessarily computed property [\"type\"] found.","Property","unnecessarilyComputedProperty",{"range":"149","text":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},[1623,1631],"\"type\"","Update the dependencies array to be: [setIsLogged, setUser]",{"range":"155","text":"156"},"Update the dependencies array to be: [setIsLogged, user]",{"range":"157","text":"158"},[1584,1586],"[setIsLogged, setUser]",[1709,1715],"[setIsLogged, user]"]